{"ast":null,"code":"var _jsxFileName = \"/Users/marcusbey/Desktop/ComputerSciences/Django/projects/tweetmama/tweetmama-web/src/tweets/components.js\";\nimport React, { useEffect, useState } from 'react';\nimport { loadTweets } from '../lookup';\nexport function TweetsList(props) {\n  const [tweets, setTweets] = useState([{\n    content: '123'\n  }]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) setTweets(response);\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }\n    });\n  });\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  const display = action.type === 'like' ? `${tweet.likes} ${action.display}` : action.display;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }\n  }, \" \", display, \" \");\n}\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, tweet.id, \"- \", tweet.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"like\",\n      display: \"Likes\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"unlike\",\n      display: \"Unlike\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"retweet\",\n      display: \"Retweet\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/marcusbey/Desktop/ComputerSciences/Django/projects/tweetmama/tweetmama-web/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","TweetsList","props","tweets","setTweets","content","myCallback","response","status","map","item","index","ActionBtn","tweet","action","className","display","type","likes","Tweet","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AAEA,SAAQC,UAAR,QAAyB,WAAzB;AAEE,OAAO,SAAUC,UAAV,CAAqBC,KAArB,EAA4B;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,CAAC;AAACM,IAAAA,OAAO,EAAE;AAAV,GAAD,CAAD,CAApC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,UAAU,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAuB;AACxC,UAAIA,MAAM,KAAK,GAAf,EACEJ,SAAS,CAACG,QAAD,CAAT;AACH,KAHD;;AAIAP,IAAAA,UAAU,CAACM,UAAD,CAAV;AACD,GANQ,EAMN,EANM,CAAT;AAOA,SAAOH,MAAM,CAACM,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,wBAAO,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAED,IAAd;AAAoB,MAAA,SAAS,EAAC,qCAA9B;AAAoE,MAAA,GAAG,EAAG,GAAEC,KAAM,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACC,GAFI,CAAP;AAID;AAIH,OAAO,SAASC,SAAT,CAAmBV,KAAnB,EAA0B;AAC7B,QAAM;AAACW,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAkBZ,KAAxB;AACA,QAAMa,SAAS,GAAGb,KAAK,CAACa,SAAN,GAAkBb,KAAK,CAACa,SAAxB,GAAoC,wBAAtD;AACA,QAAMC,OAAO,GAAGF,MAAM,CAACG,IAAP,KAAgB,MAAhB,GAAyB,GAAEJ,KAAK,CAACK,KAAM,IAAGJ,MAAM,CAACE,OAAQ,EAAzD,GAA6DF,MAAM,CAACE,OAApF;AACA,sBAAO;AAAQ,IAAA,SAAS,EAAED,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAgCC,OAAhC,MAAP;AACD;AAED,OAAO,SAASG,KAAT,CAAejB,KAAf,EAAsB;AAC3B,QAAM;AAACW,IAAAA;AAAD,MAAUX,KAAhB;AACA,QAAMa,SAAS,GAAGb,KAAK,CAACa,SAAN,GAAkBb,KAAK,CAACa,SAAxB,GAAoC,yBAAtD;AACA,sBAAO;AAAK,IAAA,SAAS,EAAEA,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACO,EAAV,QAAgBP,KAAK,CAACR,OAAtB,CADK,eAEL;AAAK,IAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEQ,KAAlB;AAAyB,IAAA,MAAM,EAAG;AAACI,MAAAA,IAAI,EAAC,MAAN;AAAcD,MAAAA,OAAO,EAAE;AAAvB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEH,KAAlB;AAAyB,IAAA,MAAM,EAAG;AAACI,MAAAA,IAAI,EAAC,QAAN;AAAgBD,MAAAA,OAAO,EAAE;AAAzB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAGH,KAAnB;AAA0B,IAAA,MAAM,EAAG;AAACI,MAAAA,IAAI,EAAC,SAAN;AAAiBD,MAAAA,OAAO,EAAE;AAA1B,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFK,CAAP;AAQD","sourcesContent":["import React, { useEffect, useState} from 'react'\n\nimport {loadTweets} from '../lookup'\n\n  export function  TweetsList(props) {\n    const [tweets, setTweets] = useState([{content: '123'}])\n  \n    useEffect(() => {\n      const myCallback = (response, status ) => {\n        if (status === 200)\n          setTweets(response) \n      }  \n      loadTweets(myCallback)\n    }, [])\n    return tweets.map((item, index) => {\n      return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\n      })\n     \n  }\n\n\n\nexport function ActionBtn(props) {\n    const {tweet, action} = props\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const display = action.type === 'like'? `${tweet.likes} ${action.display}` : action.display\n    return <button className={className}> {display} </button>\n  }\n  \n  export function Tweet(props) {\n    const {tweet} = props\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n    return <div className={className}>\n      <p>{tweet.id}- {tweet.content}</p>\n      <div className = 'btn btn-group'>\n        <ActionBtn tweet={tweet} action ={{type:\"like\", display: \"Likes\"}}/>\n        <ActionBtn tweet={tweet} action ={{type:\"unlike\", display: \"Unlike\"}}/>\n        <ActionBtn tweet ={tweet} action ={{type:\"retweet\", display: \"Retweet\"}}/>\n      </div>\n    </div>\n  }"]},"metadata":{},"sourceType":"module"}