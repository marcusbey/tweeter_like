{"ast":null,"code":"var _jsxFileName = \"/Users/marcusbey/Desktop/ComputerSciences/Django/projects/tweetmama/tweetmama-web/src/tweets/components.js\";\nimport React, { useEffect, useState } from 'react';\nimport { loadTweets } from '../lookup';\nexport function TweetComponent(props) {\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(event);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmite: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    name: \"tweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  }, \"Tweet\"))), /*#__PURE__*/React.createElement(TweetsList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }));\n}\nexport function TweetsList(props) {\n  const [tweets, setTweets] = useState([{\n    content: '123'\n  }]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) setTweets(response);\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }\n    });\n  });\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\n  const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  const actionDisplay = action.display ? action.display : 'Action';\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type === 'like') {\n      if (userLike === true) {\n        //toogle like \n        setLikes(likes - 1);\n        setUserLike(false);\n      } else {\n        setLikes(likes + 1);\n        setUserLike(true);\n      }\n    }\n  };\n\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: className,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }\n  }, \" \", display, \" \");\n}\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, tweet.id, \"- \", tweet.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"like\",\n      display: \"Likes\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"unlike\",\n      display: \"Unlike\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"retweet\",\n      display: \"Retweet\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/marcusbey/Desktop/ComputerSciences/Django/projects/tweetmama/tweetmama-web/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","TweetComponent","props","handleSubmit","event","preventDefault","console","log","className","TweetsList","tweets","setTweets","content","myCallback","response","status","map","item","index","ActionBtn","tweet","action","likes","setLikes","userLike","setUserLike","actionDisplay","display","handleClick","type","Tweet","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react'\n\nimport {loadTweets} from '../lookup'\n\nexport function TweetComponent(props) {\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        console.log(event)\n    }\n    return <div className={props.className}>\n                <div className='col-12 mb-3'>\n                    <form onSubmite={handleSubmit}>\n                        <textarea className='form-control' name='tweet'>\n\n                        </textarea>\n                        <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n                    </form>\n                </div>\n                <TweetsList />\n            </div>\n\n}       \n\nexport function  TweetsList(props) {\n    const [tweets, setTweets] = useState([{content: '123'}])\n  \n    useEffect(() => {\n      const myCallback = (response, status ) => {\n        if (status === 200)\n          setTweets(response) \n      }  \n      loadTweets(myCallback)\n    }, [])\n    return tweets.map((item, index) => {\n      return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\n      })\n      \n  }\n \n\n\nexport function ActionBtn(props) {\n    const {tweet, action} = props\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\n    const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n\n    const handleClick = (event) => {\n        event.preventDefault()\n        if (action.type === 'like'){\n            if (userLike === true) {\n                //toogle like \n                setLikes(likes - 1)\n                setUserLike(false)\n            } else {\n                setLikes(likes + 1)\n                setUserLike(true)\n            }\n            \n        }\n      }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay \n    return <button className={className} onClick={handleClick}> {display} </button>\n  }\n  \n  export function Tweet(props) {\n    const {tweet} = props\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n    return <div className={className}>\n      <p>{tweet.id}- {tweet.content}</p>\n      <div className = 'btn btn-group'>\n        <ActionBtn tweet={tweet} action ={{type:\"like\", display: \"Likes\"}}/>\n        <ActionBtn tweet={tweet} action ={{type:\"unlike\", display: \"Unlike\"}}/>\n        <ActionBtn tweet ={tweet} action ={{type:\"retweet\", display: \"Retweet\"}}/>\n      </div>\n    </div>\n  } "]},"metadata":{},"sourceType":"module"}